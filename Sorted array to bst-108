/**
 * Definition for a binary tree node.
 */
struct TreeNode {
    int val;
    TreeNode *left;
    TreeNode *right;
    // Constructor for a tree node
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
};

class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        // Helper function for recursion
        function<TreeNode*(int, int)> build = [&](int left, int right) -> TreeNode* {
            if (left > right) return nullptr;
            int mid = left + (right - left) / 2; // Avoid overflow
            TreeNode* node = new TreeNode(nums[mid]);
            node->left = build(left, mid - 1);
            node->right = build(mid + 1, right);
            return node;
        };
        return build(0, nums.size() - 1);
    }
};
