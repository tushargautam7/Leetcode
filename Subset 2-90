class Solution {
public:
    vector<vector<int>> ans;   // final result dabba
    vector<int> curr;          // abhi tak ka subset

    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(), nums.end());   // sort -> taaki duplicates ek sath aa jaye
        backtrack(nums, 0);
        return ans;
    }

    void backtrack(vector<int>& nums, int start) {
        // jo bhi abhi tak bana hai usko result me daal do
        ans.push_back(curr);

        for(int i=start; i<nums.size(); i++){
            // skip duplicate: agar same element aur same level ka hai toh ignore
            if(i > start && nums[i] == nums[i-1]) continue;

            curr.push_back(nums[i]);      // pick element
            backtrack(nums, i+1);         // next index se continue
            curr.pop_back();              // backtrack (element hata do)
        }
    }
};
