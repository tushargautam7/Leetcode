

// Definition for singly-linked list
struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(NULL) {}
};

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        // Dummy node for handling head easily
        ListNode dummy(0);
        ListNode* tail = &dummy;  // tail pointer new list banayega

        // Jab tak dono list empty na ho
        while (l1 != NULL && l2 != NULL) {
            if (l1->val < l2->val) {
                // agar l1 chhota hai -> usse attach karo
                tail->next = l1;
                l1 = l1->next;       // l1 pointer aage move karega
            } else {
                // agar l2 chhota/equal hai -> usse attach karo
                tail->next = l2;
                l2 = l2->next;       // l2 pointer aage move karega
            }
            tail = tail->next; // tail pointer nayi list ke end pe shift hoga
        }

        // agar l1 bacha hai attach karo
        if (l1 != NULL) {
            tail->next = l1;
        }

        // agar l2 bacha hai attach karo
        if (l2 != NULL) {
            tail->next = l2;
        }

        return dummy.next; // merged list ka head
    }
};
