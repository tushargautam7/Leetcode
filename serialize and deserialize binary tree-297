class Codec {
public:

    // Encodes a tree to a single string.
    string serialize(TreeNode* root) {
        if(!root)return "#,";
        return to_string(root->val)+","+serialize(root->left)+serialize(root->right);
    }

    TreeNode* build(queue<string>&q){
        string val=q.front();
        q.pop();
        if(val=="#")return NULL;
        TreeNode* node=new TreeNode(stoi(val));
        node->left=build(q);
        node->right=build(q);
        return node;
    }

    // Decodes your encoded data to tree.
    TreeNode* deserialize(string data) {
        stringstream ss(data);
        string item;
        queue<string>q;
        while(getline(ss,item,',')){
            q.push(item);
        }
        return build(q);
    }
};
